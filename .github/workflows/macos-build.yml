name: macOS DMG build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build binary and DMG (inline)
        shell: bash
        run: |
          set -euxo pipefail

          APP_NAME="IPDelister"
          ENTRY="main.py"
          DMG_NAME="${APP_NAME}-macOS.dmg"
          STAGE=".dmg-stage"

          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install pyinstaller

          # onefile binary
          pyinstaller "$ENTRY" --name "$APP_NAME" --onefile --noconfirm --clean
          test -f "dist/${APP_NAME}"

          # stage for DMG
          rm -rf "$STAGE"
          mkdir -p "$STAGE"
          cp "dist/${APP_NAME}" "$STAGE/"

          # optional extras
          [ -f "README.md" ] && cp "README.md" "$STAGE/README.md"
          [ -f "ip.txt" ] && cp "ip.txt" "$STAGE/ip.example.txt"

          # doubleâ€‘click launcher for Finder
          cat > "$STAGE/Run ${APP_NAME}.command" <<'EOF'
          #!/bin/bash
          set -e
          DIR="$(cd "$(dirname "$0")" && pwd)"
          "$DIR/IPDelister"
          echo
          read -n 1 -s -r -p "Press any key to close..."
          EOF
          chmod +x "$STAGE/Run ${APP_NAME}.command"

          # DMG
          hdiutil create -volname "$APP_NAME" -srcfolder "$STAGE" -ov -format UDZO "$DMG_NAME"
          rm -rf "$STAGE"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: IPDelister-macOS
          path: |
            IPDelister-macOS.dmg
            dist/IPDelister
